* Flow Control Statements
   ** Switch,While,Do-While.For Loop, Break, Continue
---------------------------------------------------------------------
* Static members
* Non-Static Members and their execution control flow
------------------------------------------------------------------------
* Classes, Objects and their Members
------------------------------------------------------------------------
* String Handling 
----------------------------------------------------------------------
* Arrays
-----------------------------------------------------------------------
Difference between if and switch:
* if can be used with a range of values

   if(marks>=70 && marks<=100) // We are specifying a range of values
   In case of switch we dont specify
   
while having a value with case it is always a constant.
Here we dont compare with a range of values, we directly compare with 
a constant value.
    int choice=0;
    switch(choice){
        case 1 : System.out.println("You entered 1");
                break;           
        case  2 : System.out.println("You entered 2");
                break;
        default : System.out.println("Enter either 1 or 2");
     }                
-----------------------------------------------------------------
byte,short,int,char and String
We cannot have long,float and double.
----------------------------------------------------------------------


Enter Either 10 numbers from user and perform the sum and if user enters 0 
break out of the loop.

   package com.cts.demo;
   import java.util.Scanner;
   public class LoopBreakDemo  {
 
      public static void main(String args[]) {

        Scanner scan=new Scanner(System.in);
        int ctr=0;
        int sum=0;
        int num=0;  
      while(ctr<10){
          System.out.println("Enter the number");
          num=scanner.nextInt();
          if(num==0){
              break;
          }  // end of if
          else
           {
             sum+=num;   
           } // end of else
            ctr++;
          }  // end of while
        System.out.println(sum);
       }  // end of main
     } //end of class
                              

----------------------------------------------------------------------------------------------------------
Enter 10 numbers from user and sum up only the positive numbers

  package com.cts.demo;
   import java.util.Scanner;

    public class LoopContinueDemo {

      public static void main(String args[]) {

        Scanner scan=new Scanner(System.in);
        int ctr=0;
        int sum=0;
        int num=0;  
        while(ctr<10){
             System.out.println("Enter the number");
             num=scan.nextInt();
             if(num<0){
            	 ctr++;
               continue;
               
             }
             sum=sum+num;
             ctr++;
             
        }
        System.out.println(sum);
     
     }

   }
-----------------------------------------------------------------------------------------------------------
    
  Classes =====> Design/Templates
  Objects =====> instance of a class

  First we design or first we go for classes and then we create object/objects related to that class.

Let us plan for a class called Employee with attributes id,name,desig,dept,basic.
We will design one more class with the name , EmployeeMain which will contain main method and 
where we are going to create an object of Employee class.

---------------------------------------------------------------------------
In classobjectdemo1 and classobjectdemo2 we worked with only member variables.
In classobjectdemo1 , both Employee and EmployeeMain were in the same package.
In classobjectdemo2, Employee and EmployeeMain are in different packages. So to use Employee object in 
EmployeeMain , we have done two things:-
* We wrote the import statement for Employee class as it is in a different package.
* We made the member attributes as public so that they can be access from different package.
-----------------------------------------------------------------------------------------------------------

In next demo classobjectdemo2 we are going to keep member methods 2 methods will be there setData() 
for storing the values and displayData to display the data.

--------------------------------------------------------------------------------------------------
Understanding static
There will be times when we will want to define a class member that will be used independently 
of any object of the class.Normally a member variables and member methods are accessed with the object name
but when it comes to static member , we try to access them with the class name rather than the object.

To declare a static member we use the keyword static alongwith the declaration.

The rules with static members:-
static members can access other static members only.
They cannot refer to this and super keywords.
static members are usually accessed with the class name but they can be accessed with the objects also.
But prefered way should be the class name as static members are not related to the objects.
----------------------------------------------------------------------------------------------------------
What are arrays?
1D array
Mutidimensional arrays

   Arrays are dynamically created during the runtime.

   While declaring an declaring and initialising arrays we have two steps.


  package com.cts.demo;

   public class ArrayDemo1  {

     public static void main(String args[]) {

    //  int num[]; // We are declaring an array
    //  num=new int[5]; // We are mentioning the size of the array
    // currently the array elements are initialised with the default value of zero as it is int array 
    int num[]=new int[5];
     for(int i=0;i<num.length;i++)
      {
          System.out.println(num[i]);
      }
    }
  }

---------------------------------------------------------------------------------------
Write a code to declare and initialise array.


package com.cts.demo;

   public class ArrayDemo2  {

     public static void main(String args[]) {

   
    int num[]={1,2,6,7,8,9};
     System.out.println(num.length);
     for(int i=0;i<num.length;i++)
      {
          System.out.println(num[i]);
      }
    }
  }
-----------------------------------------------------------------------------------------
Write a code to declare and taking user input

package com.cts.demo;
 
import java.util.Scanner;
   public class ArrayDemo3 {

     public static void main(String args[]) {
 
    Scanner scan=new Scanner(System.in);  
    int num[]=new int[5];
     System.out.println(num.length);
     for(int i=0;i<num.length;i++)
      {
       System.out.println("Enter the number");
       num[i]=scan.nextInt();    
     
      }
     System.out.println("The values are:");
     for(int i=0;i<num.length;i++)
       {
        System.out.println(num[i]);
       }

    }
  }
---------------------------------------------------------

import java.util.Scanner;
   public class ArrayDemo4 {

     public static void main(String args[]) {
 
    Scanner scan=new Scanner(System.in);  
    int num[]=new int[5];
     System.out.println(num.length);
     for(int i=0;i<num.length;i++)
      {
       System.out.println("Enter the number");
       num[i]=scan.nextInt();    
     
      }
     System.out.println("The values are:");
     for(int x : num)
       {
        System.out.println(x);
       }

    }
  }


